<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPoltoIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>contactDamage = 1;

hpMax = 2;
hp = hpMax;

//How many blocks we can see
hSight = 8*16;
vSight = 8*16;
found_him = false;

spd = 1;
dir = image_xscale;
pathDir = 0;

waitDelay = 0;
waitDelayMax = 30;

fadeIn  = "fadeIn"
fadeOut = "fadeOut";
hiding  = "hiding";
flying  = "flying";
idle = "idle";

state = idle;
nState = true;
animStateSwitch = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///States
/*
//Let's get one thing straight...
    if (oPlayer.x &lt;= x) 
    {
        dir = -1;
        image_xscale=dir;
    }
    else
    {
        dir = 1;
        image_xscale = 1;
    }

//Visible and hunting
if (state==flying)
{
    if (spd != 6)
    {
        spd=6;
    }
    
    if (mask_index != 0)
    {
        mask_index=0;
    }   
    
if ( playerFacingMe )
{
    state = fadeOut;
}

    if (oPlayer.x &lt;= x) 
    {
        dir = -1;
        image_xscale=dir;
    }
    else
    {
        dir = 1;
        image_xscale = 1;
    }
    
    if (found_him==false)
    {
        //if (collision_rectangle(x-leftsight,y-abovesight,x+rightsight,y+belowsight,oPlayer,false,true))
        //&amp;&amp;!collision_line(oPlayer.x,oPlayer.y,x,y,obj_floor,true,true)
        if (sightRadius)
        {
            found_him=true;
        }
    }
    
    if (found_him==true)
    {
            pathDir = point_direction(x, y, oPlayer.x, oPlayer.y-5);
            x += lengthdir_x(spd, pathDir);
            y += lengthdir_y(spd, pathDir);
    }
}

if (state==hiding)
{
    if (spd != 0)
    {
        spd=0;
    }
    
    if (mask_index != -1)
    {
        mask_index=-1;
    } 
    if (oPlayer.x &lt;= x &amp;&amp; oPlayer.facing==LEFT) 
    {
        state=fadeIn;
    }
    else if (oPlayer.x &gt;= x &amp;&amp; oPlayer.facing==RIGHT)
    {
        state=fadeIn;
    }  
}

if (state==fadeIn || state==fadeOut)
{
    if (spd != 0)
    {
        spd=0;
    }
    
    if (mask_index != -1)
    {
        mask_index=-1;
    }   
}

image_speed = 0.1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///System
if ( goodtoGo )
{
    if ( oPlayer.x &gt; x )
    {
        dir = 1;
    }
    else
    {
        dir = -1;
    }
    
    image_xscale = dir;
    
    if ( state == idle )
    {
        if ( nState == true )
        {
            pathDir = point_direction(x, y, oPlayer.x, oPlayer.y-5);
            state = flying;
        }
    }
    else if ( state == flying )
    {
        if ( nState == true )
        {
            sprite_index = sPoltoIdle;
            image_speed = 0.1;
            waitDelay = 0;
            nState = false;
        }
        if (oPlayer.x &gt;= x &amp;&amp; oPlayer.facing==-1) 
        {
            state=fadeOut;
            nState = true;
        }
        else if (oPlayer.x &lt;= x &amp;&amp; oPlayer.facing==1)
        {
            state=fadeOut;
            nState = true;
        }
        else
        {
            pathDir = point_direction(x, y, oPlayer.x, oPlayer.y-5);
            x += lengthdir_x(spd, pathDir);
            y += lengthdir_y(spd, pathDir); 
        }
    }
    else if ( state == fadeOut )
    {
        if ( nState == true )
        {
            sprite_index = sPoltoFadeOut;
            image_index = 0;
            nState = false;
        }
        sprite_index = sPoltoFadeOut;
        image_speed = 0.2;
    }
    else if ( state == hiding )
    {
        if ( nState == true )
        {
            sprite_index = -1;
            image_speed = 0;
            contactDamage = 0;
            nState = false;
        }
        if (oPlayer.x &lt;= x &amp;&amp; oPlayer.facing==-1) 
        {
            state=fadeIn;
            nState = true;
        }
        else if (oPlayer.x &gt;= x &amp;&amp; oPlayer.facing==1)
        {
            state=fadeIn;
            nState = true;
        }  
    }
    else if ( state == fadeIn )
    {
        if ( nState == true )
        {
            sprite_index = sPoltoFadeIn;
            image_index = 0;
            nState = false;
        }
        sprite_index = sPoltoFadeIn;
        image_speed = 0.2;
    }
}
    
            
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( sprite_index == sPoltoIdle )
{
    if ( animStateSwitch == true )
    {
        state = fadeOut;
        nState = true;
        animStateSwitch = false;
    }
}

if ( sprite_index == sPoltoFadeOut )
{
    state = hiding;
    nState = true;
}

if ( sprite_index == sPoltoFadeIn )
{
    state = idle;
    nState = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index != -1)
{
    draw_self();
}
draw_set_font(sFont);
draw_set_halign(true);
draw_text(x,y-30,"State: "+string(state));
//draw_text(x-10, y-84,"facing: "+string(facing));
draw_set_halign(false);
draw_set_color(c_purple);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
